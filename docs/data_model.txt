@startuml
skinparam monochrome true
scale max 1600*800

class SimulationClock {
  -id: uuid
  -created_at: datetime
  -start_timestamp: datetime
  -end_timestamp: datetime
  -recipe: Dict[str, Any]
  --
  +init()
  +clockLifetime(): List[datetime]
  +getUsers(): List[uuid]
  +advanceTime()
  +triggerDecision()
}

class Mission {
  -id: uuid
  -mission_id: str
  -weekly_frequency: Optional[int]
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  --
  +init()
}

class User {
  -id: uuid
  -created_at: datetime
  -characteristics: Dict[str, Any]
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  -is_virtual: bool
  -events: List[Dict[str, Any]]
  -context: List[Dict[str, Any]]
  -timezone: Optional[str]
  -motivation: List[Dict[str, float]]
  -memory_accessibility: List[Dict[str, float]]
  --
  +init()
  +deleteUser()
  +getEvents(): List[Dict[str, Any]]
  +generateEvents(): Dict[str, Any]
  +getMotivation(): List[Dict[str, float]]
  +calculateMotivation(): float
  +getMemoryAccessibility(): List[Dict[str, float]]
  +calculateMemoryAccessibility(): float
  +getContext(): List[Dict[str, Any]]
  +updateContext()
  +predictEngagement()
}

class Recommendation {
  -id: uuid
  -content_id: str
  -content_type: str
  -missions: List[str]
  -objective: List[str]
  -description: varchar
  -hapa: List[str]
  -comb: List[str]
  -intervention_type: List[str]
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  --
  +init()
}

class RecommendationPlan {
  -id: uuid
  -user_id: uuid
  -recommendation_id: uuid
  -mission_id: uuid
  -scheduled_for: datetime
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  --
  +init()
}

class Persona {
  -id: uuid
  -name: str
  -characteristics: Dict[str, Any]
  -models: List[uuid]
  --
  +init()
}

class UserPersona {
  -id: uuid
  -user_id: uuid
  -persona_id: uuid
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  --
  +init()
}

class Model {
  -id: uuid
  -name: str
  -model_registry_uri: str
  -model_type: str
  -framework: str
  -description: Optional[str]
  -meta_data: Dict[str, Any]
  --
  +init()
  +load()
  +train()
  +predict()
}

class Event {
  -id: uuid
  -user_id: uuid
  -event_name: str
  -event_start_time: datetime
  -event_end_time: datetime
  -characteristics: Dict[str, Any]
  -process_id: Optional[int]
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  -is_virtual: bool
  --
  +init()
}

enum EventName {
  notification_received,
  notification_opened,
  notification_rated,
  intense_physical_activity,
  moderate_physical_activity,
  long_sleep,
  short_sleep,
  ...
}

class Context {
  -id: uuid
  -user_id: uuid
  -clock_time: datetime
  -context: Dict[str, Any]
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  -is_virtual: bool
  --
  +init()
}


class Motivation {
  -id: uuid
  -user_id: uuid
  -value: float
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  -is_virtual: bool
  --
  +init()
}

class MemoryAccessibility {
  -id: uuid
  -user_id: uuid
  -value: float
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  -is_virtual: bool
  --
  +init()
}

class Reward {
  -id: uuid
  -user_id: uuid
  -state: Dict[str, Any]
  -reward: float
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  -is_virtual: bool
  --
  +init()
}

class NotificationEnvironment {
  -id: uuid
  -user_id: uuid
  -model_id: uuid
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  -is_virtual: bool
  --
  +getContentList(): List[Dict[str, Any]]
  +getState()
  +decideAction()
  +calculateReward()
}


class SelectedContent {
  -id: uuid
  -user_id: uuid
  -contents: Dict[str, Any]
  -mission_start_time: datetime
  -mission_end_time: datetime
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  --
  +init()
}

class UserFeedback {
  -events: List[Event]
  --
  +init()
}

class HealthHabitAssessment {
  -id: uuid
  -user_id: uuid
  -hhs: Dict
  -assessment_timestamp: datetime
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  --
  +init()
}

class MissionContent {
  -id: uuid
  -user_id: uuid
  -selection_timestamp: datetime
  -mission_id: uuid
  -mission_start_time: datetime
  -mission_end_time: datetime
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  --
  +init()
}

class EscalationLevel {
  -id: uuid
  -user_id: uuid
  -update_timestamp: datetime
  -level: int
  -pillar_id: str
  -created_at: datetime
  -modified_at: datetime
  -deleted_at: datetime
  -is_deleted: bool
  --
  +init()
}

SimulationClock "1" --> "*" User : activates
SimulationClock "1" --> "*"  NotificationEnvironment : triggers
User "*" --> "1" UserPersona : is linked to
UserPersona "1" --> "1" Persona : belongs to
User "1" --> "*" Event : generates
Event "1" --> "1" EventName : contains
User "1" --> "*" Context : updates
User "1" --> "*" Motivation : calculates
User "1" --> "*" MemoryAccessibility : calculates
User "1" --> "*" UserFeedback : provides
User "1" --> "*" MissionContent : selects
User "1" --> "*" EscalationLevel : has
Persona "1" --> "*" Model : contains
Recommendation "1" --> "*" Mission : belongs to
RecommendationPlan "1" --> "1" Mission : belongs to
RecommendationPlan "1" --> "*" Recommendation : contains
RecommendationPlan  "1" --> "*" NotificationEnvironment : activates
NotificationEnvironment "1" --> "1" Model : loads
NotificationEnvironment "1" --> "1" Model : trains
NotificationEnvironment "1" --> "*" Event : generates
NotificationEnvironment "1" --> "*" Reward : calculates
SelectedContent "*" --> "1" User : assigned to
HealthHabitAssessment "*" --> "1" User : belongs to
MissionContent "1" --> "1" Mission : belongs to
UserFeedback "1" --> "*" Event : generates

@enduml